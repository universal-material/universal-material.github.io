{"version":3,"sources":["quick-dialog.ts","text-field.ts","confirm-dialog.ts","custom-event.polyfill.ts","dialog.ts","dropdown.ts","progress-dialog.ts","ripple.ts","slider.ts","snackbar.ts","tab-bar.ts"],"names":[],"mappings":"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","file":"universal-material.js","sourcesContent":["\r\n\r\nconst EscapeKeyCode = 27;\r\n\r\nexport class QuickDialogConfig {\r\n  static default: QuickDialogConfig = {\r\n    closeOnBackdropClick: true,\r\n    closeOnEsc: true\r\n  };\r\n\r\n  closeOnBackdropClick?: boolean;\r\n  closeOnEsc?: boolean;\r\n}\r\n\r\nexport abstract class QuickDialog<T extends QuickDialogConfig> {\r\n  private readonly _template: string;\r\n  protected _config: T;\r\n  protected _innerDialog: Dialog;\r\n\r\n  protected constructor(template: string, config?: any, beforeCreateDialog?: Function) {\r\n    this._template = template;\r\n    this._config = {...QuickDialogConfig.default, ...config};\r\n    if (beforeCreateDialog) beforeCreateDialog();\r\n    this._createDialog();\r\n  }\r\n\r\n  private _keyDownEvent = (event: KeyboardEvent) => {\r\n    if (event.which === EscapeKeyCode) {\r\n      this._innerDialog.close();\r\n      event.preventDefault();\r\n    }\r\n  };\r\n\r\n  private _createDialog() {\r\n    const dialogContainer = document.createElement('div');\r\n    dialogContainer.innerHTML = this._template;\r\n\r\n    const dialogElement = dialogContainer.querySelector<HTMLElement>('.u-dialog');\r\n    this._configureDialog(dialogElement);\r\n\r\n    document.body.appendChild(dialogContainer);\r\n\r\n    dialogElement.addEventListener('closed', () => {\r\n      document.body.removeChild(dialogContainer);\r\n      document.body.removeEventListener('keydown', this._keyDownEvent, true);\r\n      this._onClosed();\r\n    });\r\n\r\n    this._innerDialog = Dialog.attach(dialogElement, {\r\n      destroyWhenClose: true\r\n    });\r\n\r\n    if (this._config.closeOnEsc) {\r\n      this._setEscapeEvent();\r\n    }\r\n\r\n    if (this._config.closeOnBackdropClick) {\r\n      dialogElement\r\n        .querySelector('.u-dialog-backdrop')\r\n        .addEventListener('click', () => this._innerDialog.close(), true);\r\n    }\r\n  }\r\n\r\n  protected abstract _configureDialog(dialogElement: HTMLElement): void;\r\n\r\n  close(): void {\r\n    this._innerDialog.close();\r\n  }\r\n\r\n  protected _onClosed() {\r\n\r\n  }\r\n\r\n  private _setEscapeEvent() {\r\n    document.body.addEventListener('keydown', this._keyDownEvent, true);\r\n  }\r\n}\r\n","export class TextField {\r\n\r\n  element: Element;\r\n  input: HTMLInputElement | HTMLTextAreaElement;\r\n\r\n  constructor(element: Element) {\r\n    const input = element.querySelector('input, textarea, .u-text-input') as HTMLInputElement | HTMLTextAreaElement;\r\n\r\n    if (input) {\r\n      input.addEventListener('focus', () => {\r\n        element.classList.add('focus');\r\n      });\r\n\r\n      input.addEventListener('blur', () => {\r\n        element.classList.remove('focus');\r\n      });\r\n\r\n\r\n      this.element = element;\r\n\r\n      let prototype;\r\n\r\n      if (input.nodeName.toLowerCase() === 'input') {\r\n        prototype = HTMLInputElement.prototype;\r\n      } else if (input.nodeName.toLowerCase() === 'textarea') {\r\n        prototype = HTMLTextAreaElement.prototype;\r\n      }\r\n\r\n      if (!prototype) return;\r\n\r\n      input.addEventListener('input', () => {\r\n        this.setEmpty();\r\n      });\r\n\r\n      const descriptor = Object.getOwnPropertyDescriptor(prototype, 'value');\r\n      const inputSetter = descriptor.set;\r\n      descriptor.set = (val) => {\r\n\r\n        //changing to native setter to prevent the loop while setting the value\r\n        Object.defineProperty(input, \"value\", {set:inputSetter});\r\n        input.value = val;\r\n\r\n        this.setEmpty();\r\n\r\n        //changing back to custom setter\r\n        Object.defineProperty(input, \"value\", descriptor);\r\n      };\r\n\r\n      Object.defineProperty(input, \"value\", descriptor);\r\n\r\n      this.input = input;\r\n\r\n      this.setEmpty();\r\n    }\r\n  }\r\n\r\n  setEmpty() {\r\n    if (this.input.value) {\r\n      this.element.classList.remove('empty')\r\n    } else {\r\n      this.element.classList.add('empty')\r\n    }\r\n  }\r\n\r\n  static initializeTextFields(): void {\r\n    const textFields = document.querySelectorAll('.u-text-field');\r\n    for (let i = 0; i < textFields.length; i++) {\r\n      const textField = textFields[i];\r\n      new TextField(textField);\r\n    }\r\n  }\r\n}\r\n","\n\n\nexport class ConfirmDialogConfig extends QuickDialogConfig {\n  static readonly default: ConfirmDialogConfig = {\n    confirmLabel: \"Ok\",\n    cancelLabel: \"Cancel\",\n    ...QuickDialogConfig.default\n  };\n\n  onConfirm?: Function;\n  onCancel?: Function;\n  title?: string;\n  confirmLabel?: string;\n  cancelLabel?: string;\n}\n\nconst confirmDialogTemplate = `\n<div class=\"u-dialog show\">\n  <div class=\"u-dialog-backdrop\"></div>\n  <div class=\"u-dialog-content\">\n    <div class=\"u-dialog-header\">\n      <div class=\"u-dialog-title\"></div>\n    </div>    \n    <div class=\"u-dialog-body\"></div>\n    <div class=\"u-dialog-actions\">\n      <button type=\"button\" class=\"u-btn-flat u-btn-primary\" cancelButton></button>\n      <button type=\"button\" class=\"u-btn-flat u-btn-primary\" confirmButton></button>\n    </div>\n  </div>\n</div>`;\n\nexport class ConfirmDialog extends QuickDialog<ConfirmDialogConfig> {\n\n  private readonly _message: string;\n\n  static open(message: string, config?: ConfirmDialogConfig): ConfirmDialog {\n    return new ConfirmDialog(message, config);\n  }\n\n  constructor(message: string, config?: ConfirmDialogConfig) {\n    super(confirmDialogTemplate, {...ConfirmDialogConfig.default, _message: message, ...config});\n\n    this._message = message;\n  }\n\n  protected  _configureDialog(dialogElement: HTMLElement): void {\n    const titleElement = dialogElement.querySelector<HTMLElement>('.u-dialog-title');\n\n    if (this._config.title) {\n      titleElement.innerText = this._config.title;\n    } else {\n      titleElement.parentNode.removeChild(titleElement);\n    }\n    dialogElement.querySelector<HTMLElement>('.u-dialog-body').innerText = this._config['_message'];\n\n    const confirmButton = dialogElement.querySelector<HTMLElement>('[confirmButton]');\n    const cancelButton = dialogElement.querySelector<HTMLElement>('[cancelButton]');\n\n    confirmButton.innerText = this._config.confirmLabel;\n    cancelButton.innerText = this._config.cancelLabel;\n\n    Ripple.attach(confirmButton);\n    Ripple.attach(cancelButton);\n\n    confirmButton.addEventListener('click', () => {\n      this._innerDialog.close();\n      if (this._config.onConfirm) this._config.onConfirm();\n    });\n\n    cancelButton.addEventListener('click', () => {\n      this._innerDialog.close();\n      if (this._config.onCancel) this._config.onCancel();\n    });\n  }\n}\n","(function () {\r\n  if (typeof window['CustomEvent'] === \"function\") return;\r\n\r\n  function CustomEvent(event: string, params: any) {\r\n    params = params || {bubbles: false, cancelable: false, detail: undefined};\r\n    let evt = document.createEvent('CustomEvent');\r\n    evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\r\n    return evt;\r\n  }\r\n\r\n  CustomEvent.prototype = window['Event'].prototype;\r\n\r\n  window['CustomEvent'] = CustomEvent;\r\n})();\r\n","export class DialogConfig {\n  static readonly default: DialogConfig = {\n    destroyWhenClose: false\n  };\n\n  destroyWhenClose?: boolean\n}\n\nconst closedEvent = new CustomEvent('closed');\nconst dialogBodyTopDividerClassName = 'u-dialog-scroll-top-divider';\nconst dialogBodyBottomDividerClassName = 'u-dialog-scroll-bottom-divider';\n\nexport class Dialog {\n  private static readonly _animationEvents = [\"webkitAnimationEnd\", \"oanimationend\", \"msAnimationEnd\", \"animationend\"];\n  private readonly _dialogConfig: DialogConfig;\n  private readonly _dialogBodyElement: HTMLElement;\n  private _showing: boolean;\n\n  constructor(private readonly _dialogElement: HTMLElement,\n              dialogConfig: DialogConfig) {\n    this._dialogConfig = {...DialogConfig.default, ...dialogConfig};\n    this._dialogBodyElement = this._dialogElement.querySelector<HTMLElement>('.u-dialog-body');\n\n    if (this._dialogBodyElement) {\n      this._setBodyDividers();\n      this._setDialogBodyScrollHandler();\n    }\n  }\n\n  private addAnimationEndEvents() {\n    Dialog._animationEvents.forEach(eventName => {\n      this._dialogElement.addEventListener(eventName, this.onAnimationEnd.bind(this));\n    });\n  }\n\n  private onAnimationEnd = (event: Event) => {\n    this._dialogElement.removeEventListener(event.type, this.onAnimationEnd);\n    this._dialogElement.dispatchEvent(closedEvent);\n\n    if (this._dialogConfig.destroyWhenClose) {\n      this._dialogElement.parentNode.removeChild(this._dialogElement);\n    } else {\n      this._dialogElement.classList.remove('hide');\n    }\n  };\n\n  static attach(element: HTMLElement, dialogConfig?: DialogConfig): Dialog {\n    return new Dialog(element, dialogConfig);\n  }\n\n  toggle =() => {\n    const action = this._showing ? this.close : this.open;\n    action();\n  };\n\n  open =() => {\n    this._dialogElement.classList.add('show');\n    this._showing = true;\n  };\n\n  close =() => {\n    this._dialogElement.classList.add('hide');\n    this._dialogElement.classList.remove('show');\n    this._showing = false;\n    this.addAnimationEndEvents();\n  };\n\n  private _setBodyDividers() {\n    if(this._dialogBodyElement.scrollTop) {\n      this._dialogElement.classList.add(dialogBodyTopDividerClassName);\n    } else {\n      this._dialogElement.classList.remove(dialogBodyTopDividerClassName);\n    }\n\n    const scrollBottom = this._dialogBodyElement.scrollTop + this._dialogBodyElement.offsetHeight;\n\n    if (scrollBottom !== this._dialogBodyElement.scrollHeight) {\n      this._dialogElement.classList.add(dialogBodyBottomDividerClassName);\n    } else {\n      this._dialogElement.classList.remove(dialogBodyBottomDividerClassName);\n    }\n  }\n\n  private _setDialogBodyScrollHandler() {\n    this._dialogBodyElement.addEventListener('scroll', this._setBodyDividers.bind(this), true);\n  }\n}\n","export class DropdownConfig {\r\n  static readonly default: DropdownConfig = {\r\n\r\n  };\r\n}\r\n\r\nconst closeEvent = new CustomEvent('close');\r\nconst openEvent = new CustomEvent('open');\r\nconst EnterKey = 13;\r\nconst EscapeKey = 27;\r\nconst SpaceKey = 32;\r\n\r\nexport class Dropdown {\r\n  private readonly _dropdownConfig: DropdownConfig;\r\n  private readonly _dropdownToggle: HTMLElement;\r\n  private readonly _dropdownMenu: HTMLElement;\r\n  private _showing: boolean;\r\n\r\n  constructor(private readonly _dropdownElement: HTMLElement,\r\n              dropdownConfig: DropdownConfig) {\r\n    this._dropdownToggle = _dropdownElement.querySelector('.u-dropdown-toggle');\r\n    this._dropdownMenu = _dropdownElement.querySelector('.u-dropdown-menu');\r\n    if (!this._dropdownToggle || !this._dropdownToggle) return;\r\n\r\n    this._dropdownConfig = {...DropdownConfig.default, ...dropdownConfig};\r\n    this._attachEvents();\r\n  }\r\n  static attach(element: HTMLElement, dropdownConfig?: DropdownConfig): Dropdown {\r\n    return new Dropdown(element, dropdownConfig);\r\n  }\r\n\r\n  _attachEvents() {\r\n    this._dropdownToggle.addEventListener('click', e => {\r\n      e.stopPropagation();\r\n    });\r\n\r\n    document.addEventListener('click', () => {\r\n      this.close();\r\n    });\r\n\r\n    this._dropdownToggle.addEventListener('mouseup', e => {\r\n      this.toggle();\r\n    });\r\n\r\n    this._dropdownToggle.addEventListener('keyup', e => {\r\n      switch (e.which) {\r\n        case EscapeKey:\r\n          this.close();\r\n          break;\r\n        case SpaceKey:\r\n          this.open();\r\n          break;\r\n        case EnterKey:\r\n          this.toggle();\r\n          break;\r\n      }\r\n    });\r\n  }\r\n\r\n  toggle = () => {\r\n    const action = this._showing ? this.close : this.open;\r\n    action();\r\n  };\r\n\r\n  open = () => {\r\n    this._dropdownMenu.classList.add('show');\r\n    this._showing = true;\r\n    this._dropdownElement.dispatchEvent(openEvent);\r\n  };\r\n\r\n  close = () => {\r\n    this._dropdownMenu.classList.remove('show');\r\n    this._showing = false;\r\n    this._dropdownElement.dispatchEvent(closeEvent);\r\n  };\r\n\r\n  static initializeDropdowns(): void {\r\n    const dropdowns = document.querySelectorAll('.u-dropdown');\r\n    for (let i = 0; i < dropdowns.length; i++) {\r\n      const dropdown = dropdowns[i] as HTMLElement;\r\n      Dropdown.attach(dropdown);\r\n    }\r\n  }\r\n}\r\n","\r\n\r\nexport class ProgressDialogConfig extends QuickDialogConfig {\r\n  static readonly default: ProgressDialogConfig = {\r\n    ...QuickDialogConfig.default,\r\n    closeOnBackdropClick: false,\r\n    closeOnEsc: false\r\n  };\r\n}\r\n\r\nconst progressDialogTemplate = `\r\n<div class=\"u-dialog u-dialog-progress show\">\r\n  <div class=\"u-dialog-backdrop\"></div>\r\n  <div class=\"u-dialog-content\">\r\n    <div class=\"u-dialog-body\">\r\n      <div class=\"preloader-wrapper\">\r\n        <div class=\"spinner-layer\">\r\n          <div class=\"circle-clipper left\">\r\n            <div class=\"circle\"></div>\r\n          </div>\r\n          <div class=\"gap-patch\">\r\n            <div class=\"circle\"></div>\r\n          </div>\r\n          <div class=\"circle-clipper right\">\r\n            <div class=\"circle\"></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"u-dialog-progress-message u-headline6 text-low-contrast text-nowrap\"></div>\r\n    </div>\r\n  </div>\r\n</div>`;\r\n\r\nexport class ProgressDialog extends QuickDialog<ProgressDialogConfig> {\r\n\r\n  private readonly _message: string;\r\n\r\n  static open(message: string, config?: ProgressDialogConfig): ProgressDialog {\r\n    return new ProgressDialog(message, config);\r\n  }\r\n\r\n  constructor(message: string, config?: ProgressDialogConfig) {\r\n    super(progressDialogTemplate, {...ProgressDialogConfig.default, _message: message, ...config});\r\n\r\n    this._message = message;\r\n  }\r\n\r\n  protected  _configureDialog(dialogElement: HTMLElement): void {\r\n    const message = this._config['_message'];\r\n\r\n    if (message) {\r\n      dialogElement.querySelector<HTMLElement>('.u-dialog-progress-message').innerText = message;\r\n    } else {\r\n      dialogElement.querySelector<HTMLElement>('.u-dialog-progress-message').style.display = 'none';\r\n    }\r\n  }\r\n}\r\n","export const RippleContainersSelector =\n  [\n    '.u-btn',\n    '.u-btn-flat',\n    '.u-btn-solid',\n    '.u-btn-raised',\n    '.u-btn-outline',\n    '.u-btn-floating',\n    '.u-btn-borderless',\n    '.u-tab',\n    '.u-dropdown-item',\n    '.u-chip-remove',\n    '.u-chip-hover',\n    '.u-text-input.u-dropdown-toggle'\n  ].join(',');\n\nexport class RippleConfig {\n  size?: number;\n  borderRadius?: string;\n}\n\nexport const RippleConfigMap = [\n  {\n    selector: '.u-list-selectable',\n    subSelector: '.u-list-item',\n    config: null\n  },\n  {\n    selector: '.u-list-item',\n    subSelector: '.u-list-item-hover',\n    config: null\n  },\n  {\n    selector: '.u-radio',\n    subSelector: '.u-selection-control',\n    config: null\n  },\n  {\n    selector: '.u-switch',\n    subSelector: '.u-check-indicator',\n    config: null\n  },\n  {\n    selector: '.u-checkbox',\n    subSelector: '.u-selection-control',\n    config: null\n  }\n];\n\nexport class Ripple {\n  private readonly _config: RippleConfig;\n  disabled = false;\n\n  static attach(element: HTMLElement, config?: RippleConfig): Ripple {\n    return new Ripple(element, config);\n  }\n\n  constructor(element: HTMLElement, config?: RippleConfig) {\n    this._config = {...config};\n\n    if (window.getComputedStyle(element).position !== \"absolute\" && window.getComputedStyle(element).position !== \"fixed\") {\n      element.style.position = \"relative\";\n    }\n\n    let isTouching = false;\n\n    element.addEventListener('mousedown', (e: MouseEvent) => {\n      if (!isTouching) {\n        this.createRipple(element, 'mouseup', null, e.clientX, e.clientY);\n      }\n    });\n\n    element.addEventListener('touchstart', (e: TouchEvent) => {\n      isTouching = true;\n      this.createRipple(element, 'touchend', () => {\n        setTimeout(() => {\n          isTouching = false;\n        }, 100);\n      }, e.touches[0].clientX, e.touches[0].clientY);\n    });\n  }\n\n  createRipple(rippleContainer: Element, releaseEventName: string, releaseCallback: Function, pageX: number, pageY: number) {\n    if (this.disabled) return;\n\n    const rippleWrapper = document.createElement('DIV');\n    rippleWrapper.classList.add('u-ripple-wrapper');\n\n    const ripple = document.createElement('DIV');\n    ripple.classList.add('u-ripple');\n    rippleWrapper.appendChild(ripple);\n    rippleContainer.insertAdjacentElement('afterbegin', rippleWrapper);\n\n    if (this._config.size) {\n      Ripple._setElementSquareSizeAndCenter(rippleWrapper, this._config.size);\n    }\n\n    if (this._config.borderRadius) {\n      rippleWrapper.style.borderRadius = this._config.borderRadius;\n    }\n\n    const release = function () {\n      ripple.classList.add('dismiss');\n\n      if (releaseCallback) {\n        releaseCallback();\n      }\n    };\n\n    window.addEventListener(releaseEventName, release);\n    rippleContainer.addEventListener(\"dragover\", release);\n\n    ripple.addEventListener('transitionend', () => {\n      if (ripple.classList.contains('dismiss')) {\n        rippleContainer.removeChild(rippleWrapper);\n        rippleContainer.removeEventListener(\"dragover\", release);\n        window.removeEventListener(releaseEventName, release)\n      }\n    });\n\n    requestAnimationFrame(() => {\n      const clientRect = rippleContainer.getBoundingClientRect();\n      const largestDimensionSize = Math.max(rippleWrapper.clientWidth, rippleWrapper.clientHeight);\n      let rippleSize = this._config.size || largestDimensionSize * 2;\n      Ripple._setElementSquareSizeAndCenter(ripple, rippleSize);\n      ripple.style.transitionDuration = (1080 * Math.pow(rippleSize, 0.3)) + 'ms, 750ms';\n\n      const x = (pageX - clientRect.left) + ((rippleSize - rippleContainer.clientWidth) / 2);\n      const y = (pageY - clientRect.top) + ((rippleSize - rippleContainer.clientHeight) / 2);\n\n      ripple.style.transformOrigin = x + \"px \" + y + \"px\";\n      ripple.classList.add('show');\n    });\n  }\n\n  private static _setElementSquareSizeAndCenter(element: HTMLElement, size: number) {\n    element.style.top = \"50%\";\n    element.style.left = \"50%\";\n    element.style.width = size + 'px';\n    element.style.height = size + 'px';\n    element.style.marginLeft = -size / 2 + 'px';\n    element.style.marginTop = -size / 2 + 'px';\n  }\n\n  private static _initilizeRipples(selector: string, config?: RippleConfig) {\n    const rippleContainers = document.querySelectorAll(selector);\n\n    for (let i = 0; i < rippleContainers.length; i++) {\n      new Ripple(rippleContainers[i] as HTMLElement, config);\n    }\n  }\n\n  static initializeRipples(): void {\n    Ripple._initilizeRipples(RippleContainersSelector);\n\n    for (let i = 0; i < RippleConfigMap.length; i++) {\n      let rippleConfig = RippleConfigMap[i];\n\n      let selector = rippleConfig.selector;\n\n      if (rippleConfig.subSelector) {\n        selector = [selector, rippleConfig.subSelector].join(' ');\n      }\n\n      Ripple._initilizeRipples(selector, rippleConfig.config);\n    }\n  }\n}\n","export class Slider {\r\n  private readonly _sliderThumb: HTMLElement;\r\n\r\n  constructor(private readonly _sliderElement: HTMLElement) {\r\n    const sliderInputElement = _sliderElement.querySelector('input[type=range]') as HTMLInputElement;\r\n    sliderInputElement.addEventListener('input', () => {\r\n      const value = sliderInputElement.valueAsNumber;\r\n      const min = parseInt(sliderInputElement.min, 10);\r\n      const max = parseInt(sliderInputElement.max, 10);\r\n      this._setThumbAndTrack(min, max, value);\r\n    });\r\n  }\r\n\r\n  private _setThumbAndTrack(min: number, max: number, value: number) {\r\n\r\n    const offset = max - min;\r\n    value -= offset;\r\n\r\n    this._sliderThumb.style.left = Math.round(value * 100 / offset) + '%';\r\n  }\r\n\r\n  static initializeSliders(): void {\r\n    const sliders = document.querySelectorAll('.u-slider');\r\n\r\n    sliders.forEach(slider => {\r\n      new Slider(slider as HTMLElement);\r\n    });\r\n  }\r\n}\r\n","\r\n\r\nexport class Snackbar {\r\n  private static readonly _animationEvents = [\"webkitAnimationEnd\", \"oanimationend\", \"msAnimationEnd\", \"animationend\"];\r\n  private static _snackbarQueue: SnackbarDefinition[] = [];\r\n  private static _consuming: boolean;\r\n\r\n  static show(text: string, duration: SnackbarDuration = SnackbarDuration.long, buttonDefinition?: SnackbarButtonDefinition) {\r\n    Snackbar._snackbarQueue.push({\r\n      text: text,\r\n      duration: duration,\r\n      buttonDefinition: buttonDefinition\r\n    });\r\n\r\n    if (!Snackbar._consuming) {\r\n      Snackbar.consumeQueue();\r\n    }\r\n  }\r\n\r\n  private static consumeQueue() {\r\n\r\n    if (Snackbar._snackbarQueue.length) {\r\n      Snackbar._consuming = true;\r\n      Snackbar.showNext();\r\n    }\r\n  }\r\n\r\n  private static showNext() {\r\n    if (Snackbar._snackbarQueue.length) {\r\n      const snackbarDefinition = Snackbar._snackbarQueue[0];\r\n\r\n      Snackbar._snackbarQueue = Snackbar._snackbarQueue.slice(1);\r\n\r\n      const snackbar = Snackbar.createSnackbar();\r\n\r\n      snackbar.appendChild(Snackbar.createSnackbarText(snackbarDefinition.text));\r\n\r\n      if (snackbarDefinition.buttonDefinition) {\r\n        const snackbarButton = Snackbar.createButton(snackbarDefinition.buttonDefinition);\r\n        snackbar.appendChild(snackbarButton);\r\n      }\r\n\r\n      document.body.appendChild(snackbar);\r\n\r\n      setTimeout(() => {\r\n        snackbar.classList.add(\"dismiss\");\r\n        Snackbar.addAnimationEndEvents(snackbar);\r\n\r\n      }, snackbarDefinition.duration);\r\n    } else {\r\n      Snackbar._consuming = false;\r\n    }\r\n  }\r\n\r\n  private static createSnackbar(): HTMLElement {\r\n    const snackbar = document.createElement(\"div\");\r\n    snackbar.className = \"u-snackbar\";\r\n\r\n    return snackbar;\r\n  }\r\n\r\n  private static createSnackbarText(text: string): HTMLElement {\r\n    const snackbarText = document.createElement(\"div\");\r\n    snackbarText.innerText = text;\r\n    snackbarText.className = \"u-snackbar-text\";\r\n\r\n    return snackbarText;\r\n  }\r\n\r\n  private static createButton(buttonDefinition: SnackbarButtonDefinition): HTMLElement {\r\n\r\n    const snackbarButton = document.createElement(\"button\") as HTMLButtonElement;\r\n    snackbarButton.type = \"button\";\r\n    snackbarButton.className = \"u-btn-flat u-btn-secondary\";\r\n    snackbarButton.innerText = buttonDefinition.text;\r\n\r\n    new Ripple(snackbarButton);\r\n\r\n    if (buttonDefinition.action) {\r\n      snackbarButton.addEventListener(\"click\", buttonDefinition.action);\r\n    }\r\n\r\n    return snackbarButton;\r\n  }\r\n\r\n  private static addAnimationEndEvents(snackbar: HTMLElement) {\r\n    Snackbar._animationEvents.forEach(eventName => {\r\n      snackbar.addEventListener(eventName, Snackbar.onAnimationEnd.bind(this));\r\n    });\r\n  }\r\n\r\n  private static onAnimationEnd(event: Event) {\r\n    event.currentTarget.removeEventListener(event.type, Snackbar.onAnimationEnd);\r\n    const element = event.currentTarget as HTMLElement;\r\n\r\n    element.parentNode.removeChild(element);\r\n    Snackbar.showNext();\r\n  }\r\n}\r\n\r\nexport enum SnackbarDuration {\r\n  short = 2500,\r\n  long = 5000\r\n}\r\n\r\nexport class SnackbarDefinition {\r\n  text: string;\r\n  duration: SnackbarDuration;\r\n  buttonDefinition: SnackbarButtonDefinition;\r\n}\r\n\r\nexport class SnackbarButtonDefinition {\r\n  text: string;\r\n  action: EventListener;\r\n}\r\n","interface TabElement extends HTMLElement {\n  index: number;\n}\n\nexport class TabBar {\n\n  private readonly _tabIndicatorElement: HTMLElement;\n  private readonly _tabMap: TabElement[] = [];\n  currentTabIndex: number;\n\n  constructor(private readonly _tabBarElement: HTMLElement) {\n    this._tabIndicatorElement = _tabBarElement.querySelector('.u-tab-indicator');\n    this._setTabInfoMap();\n    this.setActiveTab(0);\n\n    if (window) {\n      window.addEventListener('resize', () => {\n        this._updateTabIndicator();\n      })\n    }\n  }\n\n  setActiveTab(tabIndex: number) {\n    if (!isNaN(this.currentTabIndex)) {\n      this._tabMap[this.currentTabIndex].classList.remove('active');\n    }\n\n    this.currentTabIndex = tabIndex;\n    this._tabBarElement.dispatchEvent(new CustomEvent('tabchange', {\n      detail: {\n        tabIndex: tabIndex\n      }\n    }));\n\n    this._tabMap[this.currentTabIndex].classList.add('active');\n\n    setTimeout(() => this._updateTabIndicator(), 100);\n  }\n\n  recalculateBounds() {\n    this._tabMap.length = 0;\n    this._setTabInfoMap();\n    this._updateTabIndicator();\n  }\n\n  private _updateTabIndicator() {\n    const tab = this._tabMap[this.currentTabIndex];\n    const tabBounds = tab.getBoundingClientRect();\n    const offset = tabBounds.left - this._tabBarElement.getBoundingClientRect().left;\n\n    this._tabIndicatorElement.style.left = offset + 'px';\n    this._tabIndicatorElement.style.width = tabBounds.width + 'px';\n  }\n\n  private _tabClick = (event: Event) => {\n    const tab = event.currentTarget as TabElement;\n    this.setActiveTab(tab.index);\n  }\n\n  private _setTabInfoMap() {\n\n    const tabs = this._tabBarElement.querySelectorAll('.u-tab');\n\n    for (let i = 0; i < tabs.length; i++) {\n      const tab = tabs[i] as TabElement;\n      tab.removeEventListener('click', this._tabClick);\n      tab.addEventListener('click', this._tabClick);\n\n      tab.index = i;\n      this._tabMap.push(tab);\n    }\n  }\n\n  static attach(tabBarElement: HTMLElement): TabBar {\n    return new TabBar(tabBarElement);\n  }\n\n  static initializeTabBars(): void {\n    const tabBars = document.querySelectorAll('.u-tab-bar');\n    for (let i = 0; i < tabBars.length; i++) {\n      const tabBar = tabBars[i] as HTMLElement;\n      TabBar.attach(tabBar);\n    }\n  }\n}\n"]}